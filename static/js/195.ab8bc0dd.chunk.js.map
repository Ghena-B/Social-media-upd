{"version":3,"file":"static/js/195.ab8bc0dd.chunk.js","mappings":"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","sources":["webpack://social-network/./src/components/Users/Users.module.css?b9d0","components/Users/User.tsx","components/common/Paginator/usePagination.ts","components/common/Paginator/Paginator.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cards\":\"Users_cards__ayCoH\",\"card\":\"Users_card__GmB8h\",\"username\":\"Users_username__teYRQ\",\"profileImg\":\"Users_profileImg__lAg3K\",\"status\":\"Users_status__hugus\",\"button\":\"Users_button__vX46k\"};","import s from './Users.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {UsersType} from \"../../redux/users-reducer\";\r\nimport {Button} from \"antd\";\r\n\r\ntype PropsType = {\r\n    user: UsersType\r\n    followingInProgress: Array<number>\r\n    follow: (userId: number) => void\r\n    unfollow: (userId: number) => void\r\n}\r\nconst User: React.FC<PropsType> = ({user, followingInProgress, follow, unfollow}) => {\r\n    return (\r\n        <div>\r\n                <div className={s.card} >\r\n                    <div>\r\n                        <NavLink to={`/profile/${user.id}`}><img\r\n                            src={user.photos.large || 'https://cdn-icons-png.flaticon.com/512/149/149071.png'}\r\n                            alt=\"profile-pic\" className={s.profileImg}/></NavLink>\r\n                    </div>\r\n                    <div className={s.username}>\r\n                        {user.name}\r\n                    </div>\r\n                    <div className={s.status}>\r\n                       {user.status}\r\n                    </div>\r\n                    <div className={s.button}>\r\n                        {user.followed\r\n                            ? <Button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                unfollow(user.id)\r\n                            }}>Unfollow</Button>\r\n                            : <Button type={\"primary\"} disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                                follow(user.id)\r\n                            }}>Follow</Button>}\r\n\r\n                    </div>\r\n                </div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default User;","import {useMemo} from 'react';\r\n\r\nexport const DOTS = '...';\r\n\r\nconst range = (start: number, end: number): Array<number> => {\r\n    const length = end - start + 1;\r\n    return Array.from({ length }, (_, idx) => idx + start);\r\n};\r\n\r\ntype PropsType = {\r\n    totalCount: number;\r\n    pageSize: number;\r\n    siblingCount?: number;\r\n    currentPage: number;\r\n};\r\n\r\nexport const usePagination = ({\r\n    totalCount,\r\n    pageSize,\r\n    siblingCount = 1,\r\n    currentPage,\r\n}: PropsType): Array<number | typeof DOTS> => {\r\n    return useMemo(() => {\r\n        const totalPageCount = Math.ceil(totalCount / pageSize);\r\n        const totalPageNumbers = siblingCount + 5;\r\n\r\n        if (totalPageNumbers >= totalPageCount) {\r\n            return range(1, totalPageCount);\r\n        }\r\n\r\n        const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\r\n        const rightSiblingIndex = Math.min(\r\n            currentPage + siblingCount,\r\n            totalPageCount\r\n        );\r\n\r\n        const shouldShowLeftDots = leftSiblingIndex > 2;\r\n        const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\r\n\r\n        const firstPageIndex = 1;\r\n        const lastPageIndex = totalPageCount;\r\n\r\n        if (!shouldShowLeftDots && shouldShowRightDots) {\r\n            const leftItemCount = 3 + 2 * siblingCount;\r\n            const leftRange = range(1, leftItemCount);\r\n\r\n            return [...leftRange, DOTS, totalPageCount];\r\n        }\r\n\r\n        if (shouldShowLeftDots && !shouldShowRightDots) {\r\n            const rightItemCount = 3 + 2 * siblingCount;\r\n            const rightRange = range(\r\n                totalPageCount - rightItemCount + 1,\r\n                totalPageCount\r\n            );\r\n\r\n            return [firstPageIndex, DOTS, ...rightRange];\r\n        }\r\n\r\n        if (shouldShowLeftDots && shouldShowRightDots) {\r\n            const middleRange = range(leftSiblingIndex, rightSiblingIndex);\r\n\r\n            return [\r\n                firstPageIndex,\r\n                DOTS,\r\n                ...middleRange,\r\n                DOTS,\r\n                lastPageIndex,\r\n            ];\r\n        }\r\n\r\n        return [];\r\n    }, [totalCount, pageSize, siblingCount, currentPage]);\r\n};\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport {usePagination, DOTS} from './usePagination';\r\nimport './pagination.css';\r\n\r\ntype PropsType = {\r\n    onPageChange: (page: number | typeof DOTS) => void\r\n    totalCount: number\r\n    siblingCount?: number\r\n    currentPage: number\r\n    pageSize: number\r\n    className?: string\r\n}\r\n\r\nconst Pagination: React.FC<PropsType> = (props) => {\r\n    const {\r\n        onPageChange,\r\n        totalCount,\r\n        siblingCount = 1,\r\n        currentPage,\r\n        pageSize,\r\n        className\r\n    } = props;\r\n\r\n    const paginationRange = usePagination({\r\n        currentPage,\r\n        totalCount,\r\n        siblingCount,\r\n        pageSize\r\n    });\r\n\r\n    if (currentPage === 0 || paginationRange.length < 2) {\r\n        return null;\r\n    }\r\n\r\n    const onNext = () => {\r\n        onPageChange(currentPage + 1);\r\n    };\r\n\r\n    const onPrevious = () => {\r\n        onPageChange(currentPage - 1);\r\n    };\r\n\r\n    let lastPage = paginationRange[paginationRange.length - 1];\r\n    return (\r\n        <ul\r\n            className={classnames('pagination-container', className)}\r\n        >\r\n            <li\r\n                className={classnames('pagination-item', {\r\n                    disabled: currentPage === 1\r\n                })}\r\n                onClick={onPrevious}\r\n            >\r\n                <div className=\"arrow left\"/>\r\n            </li>\r\n            {paginationRange.map((pageNumber, index) => {\r\n                if (pageNumber === DOTS) {\r\n                    return <li key={`dots-${index}`} className=\"pagination-item dots\">&#8230;</li>;\r\n                }\r\n\r\n                return (\r\n                    <li\r\n                        key={pageNumber}\r\n                        className={classnames('pagination-item', {\r\n                            selected: pageNumber === currentPage\r\n                        })}\r\n                        onClick={() => onPageChange(pageNumber)}\r\n                    >\r\n                        {pageNumber}\r\n                    </li>\r\n                );\r\n            })}\r\n            <li\r\n                className={classnames('pagination-item', {\r\n                    disabled: currentPage === lastPage\r\n                })}\r\n                onClick={onNext}\r\n            >\r\n                <div className=\"arrow right\"/>\r\n            </li>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n\r\n","import React, {useEffect} from \"react\";\r\nimport User from \"./User\";\r\nimport s from './Users.module.css'\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport {FilterUsersForm} from \"../Forms/FilterUsersForm\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers,\r\n    getUsersFilter\r\n} from \"../../redux/users-selectors\";\r\nimport {FilterType, follow, requestUsers, unfollow} from \"../../redux/users-reducer\";\r\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\r\n\r\ntype PropsType = {}\r\ntype QueryParamsType = {\r\n    term?: string;\r\n    page?: string;\r\n    friend?: string\r\n}\r\nexport const Users: React.FC<PropsType> = () => {\r\n    const users = useSelector(getUsers)\r\n    const pageSize = useSelector(getPageSize)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const followingInProgress = useSelector(getFollowingInProgress)\r\n    const filter = useSelector(getUsersFilter)\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const [searchParams] = useSearchParams();\r\n\r\n    useEffect(() => {\r\n        const parsed: QueryParamsType = Object.fromEntries([...searchParams]);\r\n\r\n        let actualPage = parsed.page ? Number(parsed.page) : currentPage;\r\n        let actualFilter = {...filter};\r\n\r\n        if (parsed.term) actualFilter = {...actualFilter, term: parsed.term};\r\n\r\n        switch (parsed.friend) {\r\n            case \"null\":\r\n                actualFilter = {...actualFilter, friend: null};\r\n                break;\r\n            case \"true\":\r\n                actualFilter = {...actualFilter, friend: true};\r\n                break;\r\n            case \"false\":\r\n                actualFilter = {...actualFilter, friend: false};\r\n                break;\r\n        }\r\n\r\n        if (actualPage !== currentPage || actualFilter !== filter) {\r\n            dispatch(requestUsers(actualPage, pageSize, actualFilter));\r\n        }\r\n\r\n    }, [searchParams]);\r\n\r\n    useEffect(() => {\r\n        const newParams: any = {};\r\n\r\n        if (filter.term) newParams.term = filter.term;\r\n        if (filter.friend !== null) newParams.friend = String(filter.friend);\r\n        if (currentPage !== 1) newParams.page = String(currentPage);\r\n\r\n        const searchString = new URLSearchParams(newParams).toString();\r\n\r\n        if (searchString !== searchParams.toString()) {\r\n            navigate({ pathname: '/users', search: `?${searchString}` });\r\n        }\r\n\r\n    }, [filter, currentPage]);\r\n\r\n    const onPageChanged = (pageNumber: number | \"...\") => {\r\n        if (typeof pageNumber === \"number\") {\r\n            dispatch(requestUsers(pageNumber, pageSize, filter))\r\n        }\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n    const handleFollow = (userId: number) => {\r\n        dispatch(follow(userId));\r\n    }\r\n    const handleUnfollow = (userId: number) => {\r\n        dispatch(unfollow(userId));\r\n    }\r\n    return (<div>\r\n        <FilterUsersForm onFilterChanged={onFilterChanged}/>\r\n        <Paginator onPageChange={onPageChanged}\r\n                   currentPage={currentPage}\r\n                   totalCount={totalUsersCount}\r\n                   pageSize={pageSize}\r\n        />\r\n        <div className={s.cards}>\r\n            {users.map(u => <User user={u} key={u.id}\r\n                                  followingInProgress={followingInProgress}\r\n                                  follow={handleFollow}\r\n                                  unfollow={handleUnfollow}\r\n            />)}\r\n        </div>\r\n    </div>)\r\n}\r\n","import {useSelector} from \"react-redux\";\r\nimport React from 'react';\r\nimport {Users} from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../redux/users-selectors\";\r\n\r\nconst UsersPage: React.FC = () => {\r\n    const isFetching = useSelector(getIsFetching)\r\n    return <div>\r\n        {isFetching ? <Preloader/> : null}\r\n        <Users />\r\n    </div>\r\n}\r\nexport default UsersPage;"],"names":["_ref","user","followingInProgress","follow","unfollow","_jsx","children","_jsxs","className","s","NavLink","to","concat","id","src","photos","large","alt","name","status","followed","Button","disabled","some","onClick","type","DOTS","range","start","end","length","Array","from","_","idx","props","onPageChange","totalCount","_props$siblingCount","siblingCount","currentPage","pageSize","paginationRange","_ref$siblingCount","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","_toConsumableArray","rightRange","middleRange","usePagination","lastPage","classnames","map","pageNumber","index","selected","Users","users","useSelector","getUsers","getPageSize","getCurrentPage","totalUsersCount","getTotalUsersCount","getFollowingInProgress","filter","getUsersFilter","dispatch","useDispatch","navigate","useNavigate","_useSearchParams","useSearchParams","searchParams","_slicedToArray","useEffect","parsed","Object","fromEntries","actualPage","page","Number","actualFilter","_objectSpread","term","friend","requestUsers","newParams","String","searchString","URLSearchParams","toString","pathname","search","handleFollow","userId","handleUnfollow","FilterUsersForm","onFilterChanged","Paginator","u","User","isFetching","getIsFetching","Preloader"],"sourceRoot":""}